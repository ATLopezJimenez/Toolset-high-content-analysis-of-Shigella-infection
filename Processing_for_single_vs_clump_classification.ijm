// ImageJ macro by Ana Teresa Lopez Jimenez @ LSHTM

// This macro has been developped and used in the pre-print: 
// High-content superresolution microscopy and deep learning assisted analysis reveals host and bacterial heterogeneity during Shigella infection. Ana T. López-Jiménez, Dominik Brokatzky, Kamla Pillay, Tyrese Williams, Gizem Özbaykal Güler and Serge Mostowy (2024)
 
//--------------------DESCRIPTION--------------------//
// This ImageJ macro generates 8-bit images (greyscale) to be classified as single or clump by the trained CNN model "model_classification_single_vs_clump.hdf5"
// This ImageJ macro uses as input the square crop images generated by the ImageJ macro "Segmentation_bacteria_square_crops.ijm"



//--------------------Selecting the input folder, output folder and image format to be analysed--------------------//

#@ File (label = "Input directory", style = "directory") input
#@ File (label = "Output directory", style = "directory") output
#@ String (label = "File suffix", value = ".tif") suffix





//--------------------Printing date and time for log file--------------------//

function now(){
	getDateAndTime(year, month, dayOfWeek, dayOfMonth, hour, minute, second, msec);
	nowValue = ""+IJ.pad(hour,2)+":"+IJ.pad(minute,2)+":"+IJ.pad(second,2);
	return nowValue;
}

print("Macro used: ImageJ macro Processing_for_single_vs_clump_classification");
print("Macro run: " + now());
print("Directory input: " + input);
print("Directory output: " + output);





//--------------------Dialog to retrieve information about the channels--------------------//

Dialog.create("Feed me this info");
Dialog.addString("Channel with fluorescent bacteria (1, 2, 3, 4..?)", "1");
Dialog.show();
cbact=Dialog.getString();
newcbact="C" + cbact;
print("septin channel: " + newcbact);
selectWindow("Log");
saveAs("Text", output + File.separator + newname +  "Log.txt"); //saving log file 




//--------------------Setting up batch mode to analyse multiple images in the same folder--------------------//

setBatchMode(true); //Set true to avoid display of the processing (faster), set false to display processing

processFolder(input);

function processFolder(input) {
	list = getFileList(input);
	list = Array.sort(list);
	for (i = 0; i < list.length; i++) {
		if(File.isDirectory(input + File.separator + list[i]))
			processFolder(input + File.separator + list[i]);
		if(endsWith(list[i], suffix))
			processFile(input, output, list[i]);
	}
}

function processFile(input, output, file) {
open(input + File.separator + file);





//--------------------Automatic retrieval of information about the opened image--------------------//

name = getTitle();
dir = getDirectory("image");
print ("File dir: " + dir);
print ("File name: " + name);
newname=replace(name, ".tif", "");
Stack.getDimensions(width, height, channels, slices, frames);
chan = channels;
cmask=chan;
newcmask="C" + cmask;





//--------------------Image processing--------------------//
run("Split Channels");
selectWindow(newcbact + "-" + newname + ".tif");
run("Enhance Contrast...", "saturated=0 normalize");
run("Grays");
selectWindow(newcmask + "-" + newname + ".tif");
run("Invert");
setOption("ScaleConversions", true);
run("8-bit");
run("Distance Map");
run("Add...", "value=3");
selectWindow(newcbact + "-" + newname + ".tif");
setOption("ScaleConversions", true);
run("8-bit");
imageCalculator("Divide create", newcbact + "-" + newname + ".tif", newcmask + "-" + newname + ".tif");
run("Enhance Contrast...", "saturated=0 normalize");
saveAs("Tiff", output + File.separator + newname);
close('*');
}

